**Program:** `audioextracttext.py`  
**Called From:** Main Script  
**Description:** This program transcribes audio files in a specified directory to text files using the OpenAI `whisper` ASR model.

---

**Program:** `autoextract.py`  
**Called From:** Main Script  
**Description:** This program extracts specific patterns (e.g., Social Security numbers, Credit Card numbers, names, driver license) from text files in a specified directory and saves them into separate CSV files.

---

**Program:** `autoextractpdf2text.py`  
**Called From:** Main Script  
**Description:** This program extracts text from searchable PDF files in a specified directory and saves them as text files in another directory.

---

**Program:** `autoocr_parallel.py`  
**Called From:** Main Script  
**Description:** This program converts non-searchable PDF files into searchable text using OCR (Optical Character Recognition) with pytesseract and multithreading for parallel processing.

---

**Program:** `autokvextract.py`  
**Called From:** Main Script  
**Description:** This program extracts key-value pairs from text files in a given directory and writes them to new text files.

---

**Program:** `autoner.py`  
**Called From:** Main Script  
**Description:** This program performs Named Entity Recognition (NER) using spaCy on text files in a specified directory and writes the results to text files.

---

**Program:** `autosentiment.py`  
**Called From:** Main Script  
**Description:** This program performs sentiment analysis on text files in a specified directory using TextBlob and writes the results to text files.

---

**Program:** `autosummarize.py`  
**Called From:** Main Script  
**Description:** This program generates summaries for text files in a specified directory using sumy library and writes the summaries to text files.

---

**Program:** `convert_audio.py`  
**Called From:** N/A, standalone script  
**Description:** This program converts audio files from one format (e.g., AMR) to another format (e.g., WAV) in a specified directory.

---

**Program:** `dl_email.py`  
**Called From:** Main Script  
**Description:** This program downloads emails from a Gmail account based on search criteria and saves them as text files in a specified directory.

---

**Program:** `feature_extraction.py`  
**Called From:** Main Script  
**Description:** This program vectorizes text using pre-trained word2vec models (in this case, Google's pre-trained Word2Vec model).

---

**Program:** `file_utils.py`  
**Called From:** Other scripts  
**Description:** This program contains utility functions like reading text files and getting all the TXT files from a given directory.

---

**Program:** `info_extraction.py`  
**Called From:** Main Script   
**Description:** This program extracts specific information (case number, plaintiff, and address) from text files using regex and Named Entity Recognition (NER).

---

**Program:** `main.py`  
**Called From:** N/A, main script to run the application  
**Description:** This script coordinates the execution of all other scripts in the correct order, such as text extraction, entity extraction, OCR, NER, and others.

---

**Program:** `similarity_clustering.py`  
**Called From:** Main Script  
**Description:** This program performs similarity-based clustering on text files using TF-IDF and K-means clustering, categorizes files based on similarity, and identifies the most frequent phrase in each cluster.

---

**Program:** `text_preprocessing.py`  
**Called From:** Main Script  
**Description:** This program preprocesses text by performing tokenization, lowercasing, punctuation removal, stopword removal, and lemmatization.